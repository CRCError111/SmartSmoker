// script.js ‚Äî –æ–±—â–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showStatus(text, isSuccess = true) {
  const statusDiv = document.createElement('div');
  statusDiv.className = `status ${isSuccess ? 'success' : 'error'}`;
  statusDiv.textContent = text;
  document.body.appendChild(statusDiv);
  setTimeout(() => statusDiv.remove(), 3000);
}

// –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —Ñ–æ—Ä–º–∞ Wi-Fi
if (document.getElementById('wifiForm')) {
  document.getElementById('wifiForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = { ssid: formData.get('ssid'), pass: formData.get('pass') };

    try {
      const res = await fetch('/api/wifi', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      if (res.ok) {
        showStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...', true);
        setTimeout(() => window.location.href = '/', 2500);
      } else {
        const err = await res.text();
        showStatus('–û—à–∏–±–∫–∞: ' + err, false);
      }
    } catch (e) {
      showStatus('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É', false);
    }
  });

  document.getElementById('resetBtn')?.addEventListener('click', async () => {
    if (!confirm('–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Wi-Fi –∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞?')) return;
    try {
      await fetch('/api/wifi/reset', { method: 'POST' });
      showStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...', true);
      setTimeout(() => window.location.href = '/', 2500);
    } catch (e) {
      showStatus('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞', false);
    }
  });
}

// –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º (index.html)
if (document.getElementById('programsList')) {
  async function fetchState() {
    try {
      const res = await fetch('/api/state');
      if (!res.ok) return;
      const data = await res.json();

      // –°–µ—Ç—å
      const netBadge = document.getElementById('networkStatus');
      if (netBadge) {
        if (data.networkMode === 'STA') {
          netBadge.innerHTML = `üì∂ ${data.ssid} (${data.ip})`;
          netBadge.style.background = '#27ae60';
        } else {
          netBadge.innerHTML = `üì° ${data.ssid}`;
          netBadge.style.background = '#2980b9';
        }
      }

      // –°–æ—Å—Ç–æ—è–Ω–∏–µ
      const statusEl = document.getElementById('systemStatus');
      if (statusEl) {
        if (data.mode === 'RUNNING') {
          statusEl.textContent = `–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: ${data.currentProgramName} ‚Äî –≠—Ç–∞–ø ${data.currentStepIndex + 1} (–æ—Å—Ç–∞–ª–æ—Å—å ${data.stepTimeLeft})`;
        } else {
          statusEl.textContent = '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã';
        }
      }

      // –î–∞—Ç—á–∏–∫–∏
      document.getElementById('tempChamber')?.textContent = data.tempChamber.toFixed(1);
      document.getElementById('tempSmoke')?.textContent = data.tempSmoke.toFixed(1);
      document.getElementById('tempProduct')?.textContent = data.tempProduct.toFixed(1);
      document.getElementById('humidity')?.textContent = data.humidity.toFixed(0);

      // –ê–∫—Ç—é–∞—Ç–æ—Ä—ã
      document.getElementById('heaterStatus')?.textContent = data.heaterOn ? '–í–∫–ª' : '–í—ã–∫–ª';
      document.getElementById('smokeStatus')?.textContent = `${data.smokePWM}%`;

      // –ü—Ä–æ–≥—Ä–∞–º–º—ã
      const programsList = document.getElementById('programsList');
      if (programsList && data.programs) {
        let html = '';
        data.programs.forEach(prog => {
          html += `
            <div class="program-card">
              <div>
                <strong>${prog.name}</strong>
                <small>${prog.steps} —ç—Ç–∞–ø–æ–≤</small>
              </div>
              <button onclick="startProgram('${prog.name.replace(/'/g, "\\'")}')">–ó–∞–ø—É—Å—Ç–∏—Ç—å</button>
            </div>
          `;
        });
        programsList.innerHTML = html;
      }
    } catch (e) {
      console.warn('Failed to fetch state:', e);
    }
  }

  window.startProgram = async function(name) {
    try {
      const res = await fetch('/api/start', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ program: name })
      });
      if (res.ok) {
        showStatus('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!', true);
        fetchState();
      } else {
        showStatus('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞', false);
      }
    } catch (e) {
      showStatus('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏', false);
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
  setInterval(fetchState, 2000);
  fetchState();
}